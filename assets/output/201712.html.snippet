<h1>Month: December 2017</h1>
    <h1 class='post-title'><a href='/expressingStrongOpinionsThroughCode'>Expressing Strong Opinions Through Code</a></h1><div class='post-metadata'>Posted on <a href='/archive/2018/01'>Wednesday, January 10, 2018</a> by James Randall</div>

<p>Synopsis: a solution and its code should clearly communicate strong opinions about how it is structured, where things belong, and how things are done. Should be obvious where things fit and cause noticeable friction when people try and do things &quot;off the rails&quot;. Important for large teams to cooperate.</p>
    <h1 class='post-title'><a href='/dealingWithDynamicDataAlmostWithoutReflection'>Dealing With Dynamic Data (Almost) Without Reflection</a></h1><div class='post-metadata'>Posted on <a href='/archive/2017/12'>Friday, December 29, 2017</a> by James Randall</div>

<p>Often you need to manipulate a data structure without knowing it's shape at compile time, for example when authoring classes that expose generic interfaces or dealing with data described by runtime metadata (database schema, JSON files etc.).</p>
